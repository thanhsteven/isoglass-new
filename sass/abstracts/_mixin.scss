@mixin flexbox($direction: row, $align: center, $justify: center, $gap: 0) {
  display: flex;
  @if $direction {
    flex-direction: $direction;
  }
  @if $align {
    align-items: $align;
  }
  @if $justify {
    justify-content: $justify;
  }
  @if $gap {
    gap: $gap;
  }
}

// Placeholder for Input
@mixin placeholder($color) {
  font-size: 14px;
  &::-webkit-input-placeholder {
    color: $color;
  }
  &::-moz-input-placeholder {
    color: $color;
  }
}
// ! Button
@mixin linkButton() {
  display: flex;
  color: #fff;
  background-color: transparent;
  text-wrap: nowrap;
  border: unset;
  padding-block: 15px;
  border-bottom: 2px solid;
  border-bottom-color: rgba(255, 255, 255, 0.4);
  cursor: pointer;
  &:hover {
    border-color: #fff;
  }
}

//! Box
@mixin square($width) {
  width: $width;
  height: $width;
}
@mixin size($width: 0, $height: 0) {
  width: $width;
  height: $height;
}

//! Under Line Menu Item
@mixin underline($color, $transition) {
  content: "";
  display: block;
  height: 1px;
  width: 0;
  background-color: $color;
  transition: $transition;
  position: absolute;
  bottom: 0;
  left: 0;
  transform: translateY(-13px);
}
// When hover
@mixin hoverUnderline($width) {
  width: $width;
}

//! Responsive
@mixin minWidth($breakpoint: 0) {
  @media screen and (min-width: $breakpoint) {
    @content;
  }
}
@mixin maxWidth($breakpoint) {
  @media screen and (max-width: $breakpoint) {
    @content;
  }
}
@mixin minmax($min: 0, $max: 0) {
  @media screen and (min-width: $min) and (max-width: $max) {
    @content;
  }
}

@mixin virtualBridge($height) {
  content: "";
  display: block;
  width: 100%;
  height: $height;
  background-color: transparent;
  position: absolute;
  bottom: 100%;
  z-index: 120;
}
